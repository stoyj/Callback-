// –ó–∞–¥–∞—á–∞ 1: –û—Å–Ω–æ–≤–µ–Ω Callback

// –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—è processMessage, –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∏ callback —Ñ—É–Ω–∫—Ü–∏—è. Callback —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –±—ä–¥–µ –∏–∑–≤–∏–∫–∞–Ω–∞ —Å–ª–µ–¥ –∫–∞—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –±—ä–¥–µ –æ—Ç–ø–µ—á–∞—Ç–∞–Ω–æ.

/*
function processMessage(message, callback) {
    console.log("–°—ä–æ–±—â–µ–Ω–∏–µ: " + message);
    callback();
}

function done() {
    console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞—Ç–∞ –µ –∑–∞–≤—ä—Ä—à–µ–Ω–∞!");
}

// –¢–µ—Å—Ç
processMessage("–ó–¥—Ä–∞–≤–µ–π, —Å–≤—è—Ç!", done);

–û—á–∞–∫–≤–∞–Ω –∏–∑—Ö–æ–¥:
–°—ä–æ–±—â–µ–Ω–∏–µ: –ó–¥—Ä–∞–≤–µ–π, —Å–≤—è—Ç!  
–û–±—Ä–∞–±–æ—Ç–∫–∞—Ç–∞ –µ –∑–∞–≤—ä—Ä—à–µ–Ω–∞!  

*/

/*
–ó–∞–¥–∞—á–∞ 2: Callback —Å –ø–∞—Ä–∞–º–µ—Ç—ä—Ä

–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—è calculate, –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ –¥–≤–µ —á–∏—Å–ª–∞ –∏ callback —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—è—Ç–æ —â–µ –∏–∑–≤—ä—Ä—à–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ä—Ä—Ö—É —Ç—è—Ö.

function calculate(a, b, callback) {
    return callback(a, b);
}

function add(x, y) {
    return x + y;
}

// –¢–µ—Å—Ç
console.log(calculate(5, 3, add)); // –û—á–∞–∫–≤–∞–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç: 8
*/

/*
–ó–∞–¥–∞—á–∞ 3: Callback —Å setTimeout

–ó–∞–¥–∞—á–∞: –°–∏–º—É–ª–∏—Ä–∞–π –∑–∞–±–∞–≤—è–Ω–µ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —Å setTimeout. –°–ª–µ–¥ 2 —Å–µ–∫—É–Ω–¥–∏ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–≤–∏–∫–∞ callback —Ñ—É–Ω–∫—Ü–∏—è.

function delayedMessage(callback) {
    setTimeout(() => {
        console.log("–°—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–æ!");
        callback();
    }, 2000);
}

function done() {
    console.log("–û–ø–µ—Ä–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–≤—ä—Ä—à–µ–Ω–∞!");
}

// –¢–µ—Å—Ç
delayedMessage(done);

*/

/*
–ó–∞–¥–∞—á–∞ 4: –†–∞–±–æ—Ç–∞ —Å –º–∞—Å–∏–≤

–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—è filterNumbers, –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ –º–∞—Å–∏–≤ –æ—Ç —á–∏—Å–ª–∞ –∏ callback, –∫–æ–π—Ç–æ —Ä–µ—à–∞–≤–∞ –∫–æ–∏ —á–∏—Å–ª–∞ –¥–∞ –æ—Å—Ç–∞–Ω–∞—Ç.

function filterNumbers(numbers, callback) {
    return numbers.filter(callback);
}

function isEven(num) {
    return num % 2 === 0;
}

// –¢–µ—Å—Ç
console.log(filterNumbers([1, 2, 3, 4, 5, 6], isEven)); // –û—á–∞–∫–≤–∞–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç: [2, 4, 6]
*/

/*
–ó–∞–¥–∞—á–∞ 5: Callback —Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–ó–∞–¥–∞—á–∞: –ù–∞–ø—Ä–∞–≤–∏ —Ñ—É–Ω–∫—Ü–∏—è getUserData, –∫–æ—è—Ç–æ –ø–æ–ª—É—á–∞–≤–∞ –∏–º–µ –∏ callback, –∫–æ–π—Ç–æ –æ–±—Ä–∞–±–æ—Ç–≤–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞.

function getUserData(name, callback) {
    let user = { name: name, age: 25 };
    callback(user);
}

function displayUser(user) {
    console.log(`–ò–º–µ: ${user.name}, –í—ä–∑—Ä–∞—Å—Ç: ${user.age}`);
}

// –¢–µ—Å—Ç
getUserData("–ò–≤–∞–Ω", displayUser);
*/

/*
–ó–∞–¥–∞—á–∞ 6: –ü—Ä–æ—Å—Ç–∏ –∏–∑—á–∏—Å–ª–µ–Ω–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏

–ó–∞–¥–∞—á–∞: –ü—Ä–æ–º–µ–Ω–∏ calculate(), —Ç–∞–∫–∞ —á–µ –¥–∞ –ø—Ä–∏–µ–º–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.

function calculate(a, b, callback) {
    return callback(a, b);
}

console.log(calculate(10, 5, (x, y) => x - y)); // –û—á–∞–∫–≤–∞–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç: 5
console.log(calculate(10, 5, (x, y) => x * y)); // –û—á–∞–∫–≤–∞–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç: 50
*/

/*
–ó–∞–¥–∞—á–∞ 7: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å–ø–∏—Å—ä–∫ –æ—Ç –∏–º–µ–Ω–∞

–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ processNames(), –∫–æ—è—Ç–æ –æ–±—Ä–∞–±–æ—Ç–≤–∞ —Å–ø–∏—Å—ä–∫ —Å –∏–º–µ–Ω–∞ —á—Ä–µ–∑ callback.

function processNames(names, callback) {
    return names.map(callback);
}

function toUpperCase(name) {
    return name.toUpperCase();
}

// –¢–µ—Å—Ç
console.log(processNames(["–ò–≤–∞–Ω", "–ú–∞—Ä–∏—è", "–ü–µ—Ç—ä—Ä"], toUpperCase)); // ["–ò–í–ê–ù", "–ú–ê–†–ò–Ø", "–ü–ï–¢–™–†"]
*/

/*
–ó–∞–¥–∞—á–∞ 8: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏

–ó–∞–¥–∞—á–∞: –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏ —Å setTimeout.

function fetchData(callback) {
    setTimeout(() => {
        callback({ id: 1, name: "–ü—Ä–æ–¥—É–∫—Ç", price: 100 });
    }, 3000);
}

function displayProduct(product) {
    console.log(`–ü—Ä–æ–¥—É–∫—Ç: ${product.name}, –¶–µ–Ω–∞: ${product.price} –ª–≤.`);
}

// –¢–µ—Å—Ç
fetchData(displayProduct);

*/

/*
–ó–∞–¥–∞—á–∞ 9: –°–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —á–∏—Å–ª–∞

–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ sortNumbers(), –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ —á–∏—Å–ª–∞ –∏ callback –∑–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ.

function sortNumbers(numbers, callback) {
    return numbers.sort(callback);
}

console.log(sortNumbers([5, 3, 8, 1], (a, b) => a - b)); // –û—á–∞–∫–≤–∞–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç: [1, 3, 5, 8]
*/

/*
–ó–∞–¥–∞—á–∞ 10: –†–∞–±–æ—Ç–∞ —Å DOM –∏ —Å—ä–±–∏—Ç–∏—è

–ó–∞–¥–∞—á–∞: –î–æ–±–∞–≤–∏ –±—É—Ç–æ–Ω –≤ HTML, –∫–æ–π—Ç–æ –∏–∑–ø—ä–ª–Ω—è–≤–∞ callback —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–µ.

<button id="myButton">–ù–∞—Ç–∏—Å–Ω–∏ –º–µ</button> index.htmil

document.getElementById("myButton").addEventListener("click", function() {
    console.log("–ë—É—Ç–æ–Ω—ä—Ç –±–µ—à–µ –Ω–∞—Ç–∏—Å–Ω–∞—Ç!");
});
*/

/*
–ó–∞–¥–∞—á–∞ 11: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–∞
–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—è checkNumber(), –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ —á–∏—Å–ª–æ –∏ callback —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—è—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ —á–∏—Å–ª–æ—Ç–æ –µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–æ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª–Ω–æ.

function checkNumber(num, callback) {
    callback(num);
}

function isPositive(n) {
    if (n >= 0) {
        console.log(`${n} –µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–æ —á–∏—Å–ª–æ`);
    } else {
        console.log(`${n} –µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª–Ω–æ —á–∏—Å–ª–æ`);
    }
}

// –¢–µ—Å—Ç
checkNumber(10, isPositive);
checkNumber(-5, isPositive);

‚úÖ –†–∞–∑–±–µ—Ä–∏ –≥–æ: checkNumber() –∏–∑–≤–∏–∫–≤–∞ callback-–∞ isPositive(), –∫–æ–π—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–≤–∞ —á–∏—Å–ª–æ—Ç–æ.
*/

/*
–ó–∞–¥–∞—á–∞ 12: –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –Ω—è–∫–æ–ª–∫–æ callback —Ñ—É–Ω–∫—Ü–∏–∏
–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ runCallbacks(), –∫–æ—è—Ç–æ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –Ω—è–∫–æ–ª–∫–æ callback —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ä—Ä—Ö—É –¥–∞–¥–µ–Ω–æ —á–∏—Å–ª–æ.

function runCallbacks(num, callback1, callback2) {
    callback1(num);
    callback2(num);
}

function double(n) {
    console.log(`–£–¥–≤–æ–µ–Ω–æ: ${n * 2}`);
}

function square(n) {
    console.log(`–ö–≤–∞–¥—Ä–∞—Ç: ${n * n}`);
}

// –¢–µ—Å—Ç
runCallbacks(4, double, square);

–ò–∑–ø—ä–ª–Ω—è–≤–∞–º–µ –¥–≤–µ —Ä–∞–∑–ª–∏—á–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ä—Ä—Ö—É –µ–¥–Ω–æ —á–∏—Å–ª–æ.
*/

/*
–ó–∞–¥–∞—á–∞ 13: Callback –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ

–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ executeTask(), –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ callback –∑–∞ —É—Å–ø–µ—Ö –∏ –≥—Ä–µ—à–∫–∞.

function executeTask(successCallback, errorCallback) {
    let success = Math.random() > 0.5; // 50% —à–∞–Ω—Å –∑–∞ —É—Å–ø–µ—Ö

    if (success) {
        successCallback("–ó–∞–¥–∞—á–∞—Ç–∞ –±–µ—à–µ —É—Å–ø–µ—à–Ω–∞!");
    } else {
        errorCallback("–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞!");
    }
}

// –¢–µ—Å—Ç
executeTask(
    (message) => console.log("‚úÖ " + message),
    (error) => console.log("‚ùå " + error)
);

–°–∏–º—É–ª–∏—Ä–∞–º–µ —Å–ª—É—á–∞–π–Ω–æ –¥–∞–ª–∏ –∑–∞–¥–∞—á–∞—Ç–∞ —â–µ –µ —É—Å–ø–µ—à–Ω–∞ –∏–ª–∏ –Ω–µ.
*/

/*
–ó–∞–¥–∞—á–∞ 14: –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –¥—É–º–∞ –≤ –º–∞—Å–∏–≤

–ó–∞–¥–∞—á–∞: –ù–∞–ø—Ä–∞–≤–∏ —Ñ—É–Ω–∫—Ü–∏—è findWord(), –∫–æ—è—Ç–æ –Ω–∞–º–∏—Ä–∞ –¥—É–º–∞ –≤ –º–∞—Å–∏–≤ –∏ –∏–∑–≤–∏–∫–≤–∞ callback.

function findWord(words, target, callback) {
    let found = words.includes(target);
    callback(found);
}

function showResult(isFound) {
    console.log(isFound ? "–î—É–º–∞—Ç–∞ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞!" : "–î—É–º–∞—Ç–∞ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞!");
}

// –¢–µ—Å—Ç
findWord(["—è–±—ä–ª–∫–∞", "–±–∞–Ω–∞–Ω", "–ø–æ—Ä—Ç–æ–∫–∞–ª"], "–±–∞–Ω–∞–Ω", showResult);
findWord(["—è–±—ä–ª–∫–∞", "–±–∞–Ω–∞–Ω", "–ø–æ—Ä—Ç–æ–∫–∞–ª"], "–≥—Ä–æ–∑–¥–µ", showResult);

includes() –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –¥—É–º–∞—Ç–∞ –µ –≤ –º–∞—Å–∏–≤–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 15: –ü—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ —Å–ø–∏—Å—ä–∫ –æ—Ç —á–∏—Å–ª–∞
–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ modifyNumbers(), –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ –º–∞—Å–∏–≤ –∏ callback –∑–∞ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è.

function modifyNumbers(numbers, callback) {
    return numbers.map(callback);
}

function multiplyByThree(n) {
    return n * 3;
}

// –¢–µ—Å—Ç
console.log(modifyNumbers([1, 2, 3, 4], multiplyByThree)); // [3, 6, 9, 12]

map() –∏–∑–ø–æ–ª–∑–≤–∞ callback-–∞, –∑–∞ –¥–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞ —á–∏—Å–ª–∞—Ç–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 16: –û–±—Ä–∞—Ç–Ω–æ –±—Ä–æ–µ–Ω–µ —Å callback
–ó–∞–¥–∞—á–∞: –ò–∑–ø–æ–ª–∑–≤–∞–π setTimeout(), –∑–∞ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—à –æ–±—Ä–∞—Ç–Ω–æ –±—Ä–æ–µ–Ω–µ –æ—Ç 5 –¥–æ 1.

function countdown(n, callback) {
    if (n === 0) {
        callback();
        return;
    }
    console.log(n);
    setTimeout(() => countdown(n - 1, callback), 1000);
}

function finish() {
    console.log("üöÄ –°—Ç–∞—Ä—Ç!");
}

// –¢–µ—Å—Ç
countdown(5, finish);

–§—É–Ω–∫—Ü–∏—è—Ç–∞ –∏–∑–≤–∏–∫–≤–∞ —Å–∞–º–∞ —Å–µ–±–µ —Å–∏ –∏ –Ω–∞–º–∞–ª—è–≤–∞ n, –¥–æ–∫–∞—Ç–æ —Å—Ç–∏–≥–Ω–µ 0.
*/

/*
–ó–∞–¥–∞—á–∞ 17: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤—ä–∑—Ä–∞—Å—Ç
–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏ checkAge(), –∫–æ—è—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ —á–æ–≤–µ–∫ –µ –ø—ä–ª–Ω–æ–ª–µ—Ç–µ–Ω

function checkAge(age, callback) {
    if (age >= 18) {
        callback("–ú–æ–∂–µ –¥–∞ –≤–ª–µ–∑–µ—à.");
    } else {
        callback("–î–æ—Å—Ç—ä–ø—ä—Ç –µ –∑–∞–±—Ä–∞–Ω–µ–Ω.");
    }
}

// –¢–µ—Å—Ç
checkAge(20, console.log);
checkAge(15, console.log);

Callback-—ä—Ç –≤—Ä—ä—â–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç –≤—ä–∑—Ä–∞—Å—Ç—Ç–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 18: –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –∫–æ–¥ —Å–ª–µ–¥ –∑–∞–±–∞–≤—è–Ω–µ
–ó–∞–¥–∞—á–∞: –ù–∞–ø—Ä–∞–≤–∏ delayedExecution(), –∫–æ—è—Ç–æ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –∫–æ–¥ —Å–ª–µ–¥ –∑–∞–±–∞–≤—è–Ω–µ.

function delayedExecution(callback, delay) {
    setTimeout(callback, delay);
}

// –¢–µ—Å—Ç
delayedExecution(() => console.log("–¢–æ–≤–∞ —Å–µ –ø–æ—è–≤—è–≤–∞ —Å–ª–µ–¥ 3 —Å–µ–∫—É–Ω–¥–∏!"), 3000);

setTimeout() –∏–∑—á–∞–∫–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –≤—Ä–µ–º–µ –ø—Ä–µ–¥–∏ –¥–∞ –∏–∑–≤–∏–∫–∞ callback-–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 19: –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–Ω–æ —á–∏—Å–ª–æ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
–ó–∞–¥–∞—á–∞: –ù–∞–ø—Ä–∞–≤–∏ generateNumber(), –∫–æ—è—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞ —á–∏—Å–ª–æ –∏ –∏–∑–≤–∏–∫–≤–∞ callback.

function generateNumber(callback) {
    let number = Math.floor(Math.random() * 100);
    callback(number);
}

function printNumber(num) {
    console.log("–ü—Ä–æ–∏–∑–≤–æ–ª–Ω–æ —á–∏—Å–ª–æ: " + num);
}

// –¢–µ—Å—Ç
generateNumber(printNumber);

Math.random() –≥–µ–Ω–µ—Ä–∏—Ä–∞ —á–∏—Å–ª–æ, –∫–æ–µ—Ç–æ –ø–æ–¥–∞–≤–∞–º–µ –Ω–∞ callback-–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 20: –û—Ü–µ–Ω—è–≤–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç
–ó–∞–¥–∞—á–∞: –ù–∞–ø—Ä–∞–≤–∏ gradeTest(), –∫–æ—è—Ç–æ –ø—Ä–∏–µ–º–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç –∏ callback –∑–∞ –æ–±—Ä–∞—Ç–Ω–∞ –≤—Ä—ä–∑–∫–∞.

function gradeTest(score, callback) {
    if (score >= 50) {
        callback("–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –ò–∑–ø–∏—Ç–∞ –µ –≤–∑–µ—Ç.");
    } else {
        callback("–ù–µ—É—Å–ø–µ—à–µ–Ω –æ–ø–∏—Ç. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.");
    }
}

// –¢–µ—Å—Ç
gradeTest(75, console.log);
gradeTest(30, console.log);

–ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –æ—Ü–µ–Ω–∫–∞—Ç–∞ –µ –Ω–∞–¥ 50 –∏ –ø–æ–¥–∞–≤–∞–º–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞ –∫—ä–º callback-–∞.
*/

/*
üî• –ü–æ-—Å–ª–æ–∂–Ω–∏ –∑–∞–¥–∞—á–∏ —Å –∫–æ–º–±–∏–Ω–∏—Ä–∞–Ω–µ –Ω–∞ callback —Ñ—É–Ω–∫—Ü–∏–∏
–°–µ–≥–∞ —â–µ –∫–æ–º–±–∏–Ω–∏—Ä–∞–º–µ –Ω—è–∫–æ–ª–∫–æ callback —Ñ—É–Ω–∫—Ü–∏–∏, –∑–∞ –¥–∞ —Å—ä–∑–¥–∞–¥–µ–º –ø–æ-—Å–ª–æ–∂–Ω–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏.

–ó–∞–¥–∞—á–∞ 21: –í–µ—Ä–∏–∂–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –∑–∞–¥–∞—á–∏
–ó–∞–¥–∞—á–∞: –ò–º–∞–º–µ —Ç—Ä–∏ –∑–∞–¥–∞—á–∏, –∫–æ–∏—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–ø—ä–ª–Ω—è—Ç –µ–¥–Ω–∞ —Å–ª–µ–¥ –¥—Ä—É–≥–∞, –≤—Å—è–∫–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∑–∞–±–∞–≤—è–Ω–µ.

function task1(callback) {
    setTimeout(() => {
        console.log("üîπ –ó–∞–¥–∞—á–∞ 1 –∏–∑–ø—ä–ª–Ω–µ–Ω–∞.");
        callback();
    }, 1000);
}

function task2(callback) {
    setTimeout(() => {
        console.log("üîπ –ó–∞–¥–∞—á–∞ 2 –∏–∑–ø—ä–ª–Ω–µ–Ω–∞.");
        callback();
    }, 2000);
}

function task3(callback) {
    setTimeout(() => {
        console.log("üîπ –ó–∞–¥–∞—á–∞ 3 –∏–∑–ø—ä–ª–Ω–µ–Ω–∞.");
        callback();
    }, 1500);
}

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –≤—ä–≤ –≤–µ—Ä–∏–≥–∞
task1(() => {
    task2(() => {
        task3(() => {
            console.log("‚úÖ –í—Å–∏—á–∫–∏ –∑–∞–¥–∞—á–∏ —Å–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏!");
        });
    });
});

–í—Å—è–∫–∞ –∑–∞–¥–∞—á–∞ –∏–∑—á–∞–∫–≤–∞ –ø—Ä–µ–¥–∏—à–Ω–∞—Ç–∞ –ø—Ä–µ–¥–∏ –¥–∞ –∑–∞–ø–æ—á–Ω–µ.
*/

/*
–ó–∞–¥–∞—á–∞ 22: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏ –∑–∞—è–≤–∫–∏

–ó–∞–¥–∞—á–∞: –ò–º–∞–º–µ —Å–ø–∏—Å—ä–∫ —Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏. –ó–∞ –≤—Å–µ–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Ç—Ä—è–±–≤–∞ –¥–∞ –∑–∞—Ä–µ–¥–∏–º –¥–∞–Ω–Ω–∏, –¥–∞ –≥–∏ –æ–±—Ä–∞–±–æ—Ç–∏–º –∏ –Ω–∞–∫—Ä–∞—è –¥–∞ –≥–∏ –ø–æ–∫–∞–∂–µ–º.

function fetchUser(id, callback) {
    setTimeout(() => {
        console.log(`üì• –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`);
        callback({ id: id, name: `–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`, age: 20 + id });
    }, 1000);
}

function processUser(user, callback) {
    setTimeout(() => {
        user.status = "–ê–∫—Ç–∏–≤–µ–Ω";
        console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ ${user.name}`);
        callback(user);
    }, 1000);
}

function displayUser(user) {
    setTimeout(() => {
        console.log(`üë§ ${user.name}, –í—ä–∑—Ä–∞—Å—Ç: ${user.age}, –°—Ç–∞—Ç—É—Å: ${user.status}`);
    }, 500);
}

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ
fetchUser(1, (user) => {
    processUser(user, (processedUser) => {
        displayUser(processedUser);
    });
});

–ó–∞—Ä–µ–∂–¥–∞–º–µ, –æ–±—Ä–∞–±–æ—Ç–≤–∞–º–µ –∏ –ø–æ–∫–∞–∑–≤–∞–º–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è, –∏–∑–ø–æ–ª–∑–≤–∞–π–∫–∏ callback-–∏.
*/

/*
–ó–∞–¥–∞—á–∞ 23: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∑–∞—è–≤–∫–∏ —Å –≥—Ä–µ—à–∫–∏
–ó–∞–¥–∞—á–∞: –î–æ–±–∞–≤–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –≥—Ä–µ—à–∫–∏ –≤ –ø—Ä–µ–¥–∏—à–Ω–∞—Ç–∞ –∑–∞–¥–∞—á–∞.

function fetchUser(id, callback, errorCallback) {
    setTimeout(() => {
        let success = Math.random() > 0.3; // 70% —à–∞–Ω—Å –∑–∞ —É—Å–ø–µ—Ö
        if (success) {
            console.log(`üì• –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`);
            callback({ id: id, name: `–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`, age: 20 + id });
        } else {
            errorCallback(`‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`);
        }
    }, 1000);
}

// –¢–µ—Å—Ç
fetchUser(1, 
    (user) => console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–¥–µ–Ω: ${user.name}`), 
    (error) => console.log(error)
);

–ê–∫–æ Math.random() –≤—ä—Ä–Ω–µ –≥—Ä–µ—à–∫–∞, —Å–µ –∏–∑–≤–∏–∫–≤–∞ errorCallback().
*/

/*
–ó–∞–¥–∞—á–∞ 24: –ö–æ–º–±–∏–Ω–∏—Ä–∞–Ω–µ –Ω–∞ –Ω—è–∫–æ–ª–∫–æ callback —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–∞—Å–∏–≤

–ó–∞–¥–∞—á–∞: –°—ä–∑–¥–∞–π –º–∞—Å–∏–≤ –æ—Ç callback —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≥–∏ –∏–∑–ø—ä–ª–Ω–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–æ.

function runCallbacks(callbacks) {
    callbacks.forEach((callback, index) => {
        setTimeout(() => {
            console.log(`‚û°Ô∏è –ò–∑–ø—ä–ª–Ω—è–≤–∞–Ω–µ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è ${index + 1}`);
            callback();
        }, index * 1000);
    });
}

// –°–ø–∏—Å—ä–∫ —Å callback-–∏
let tasks = [
    () => console.log("üîπ –ü—ä—Ä–≤–∞ –∑–∞–¥–∞—á–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∞."),
    () => console.log("üîπ –í—Ç–æ—Ä–∞ –∑–∞–¥–∞—á–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∞."),
    () => console.log("üîπ –¢—Ä–µ—Ç–∞ –∑–∞–¥–∞—á–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∞.")
];

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ
runCallbacks(tasks);

–ò–∑–ø–æ–ª–∑–≤–∞–º–µ forEach(), –∑–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –≤—Å–∏—á–∫–∏ callback-–∏ —Å—ä—Å –∑–∞–±–∞–≤—è–Ω–µ.
*/

/*
–ó–∞–¥–∞—á–∞ 25: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ø–∏—Å—ä–∫ —Å—ä—Å –∑–∞—è–≤–∫–∏ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ)

–ó–∞–¥–∞—á–∞: –ò–º–∞–º–µ —Å–ø–∏—Å—ä–∫ –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏, –∑–∞ –∫–æ–∏—Ç–æ –∏—Å–∫–∞–º–µ –¥–∞ –∑–∞—Ä–µ–¥–∏–º –¥–∞–Ω–Ω–∏ –µ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.

function fetchUser(id, callback) {
    setTimeout(() => {
        console.log(`üì• –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}`);
        callback({ id: id, name: `–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${id}` });
    }, Math.random() * 2000);
}

function fetchUsers(ids, callback) {
    let users = [];
    let completed = 0;

    ids.forEach((id) => {
        fetchUser(id, (user) => {
            users.push(user);
            completed++;
            if (completed === ids.length) {
                callback(users);
            }
        });
    });
}

// –¢–µ—Å—Ç
fetchUsers([1, 2, 3], (users) => {
    console.log("‚úÖ –í—Å–∏—á–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –∑–∞—Ä–µ–¥–µ–Ω–∏:", users);
});

–ò–∑–ø—ä–ª–Ω—è–≤–∞–º–µ –Ω—è–∫–æ–ª–∫–æ –∑–∞—è–≤–∫–∏ –µ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏ –∏–∑—á–∞–∫–≤–∞–º–µ –≤—Å–∏—á–∫–∏ –¥–∞ –∑–∞–≤—ä—Ä—à–∞—Ç.
*/

/*
–ó–∞–¥–∞—á–∞ 26: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ —Å reduce()
–ó–∞–¥–∞—á–∞: –ò–∑–ø–æ–ª–∑–≤–∞–π reduce(), –∑–∞ –¥–∞ –∏–∑–ø—ä–ª–Ω–∏—à —Ñ—É–Ω–∫—Ü–∏–∏ –µ–¥–Ω–∞ —Å–ª–µ–¥ –¥—Ä—É–≥–∞.

function runTasks(tasks, finalCallback) {
    tasks.reduce((prev, task) => {
        return () => task(prev);
    }, finalCallback)();
}

// –°–ø–∏—Å—ä–∫ —Å—ä—Å –∑–∞–¥–∞—á–∏
let steps = [
    (next) => { console.log("üõ† –°—Ç—ä–ø–∫–∞ 1"); setTimeout(next, 1000); },
    (next) => { console.log("üõ† –°—Ç—ä–ø–∫–∞ 2"); setTimeout(next, 1000); },
    (next) => { console.log("üõ† –°—Ç—ä–ø–∫–∞ 3"); setTimeout(next, 1000); }
];

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ
runTasks(steps, () => console.log("‚úÖ –í—Å–∏—á–∫–∏ —Å—Ç—ä–ø–∫–∏ –∑–∞–≤—ä—Ä—à–µ–Ω–∏!"));

–ò–∑–ø–æ–ª–∑–≤–∞–º–µ reduce(), –∑–∞ –¥–∞ —Å–≤—ä—Ä–∂–µ–º –≤—Å–∏—á–∫–∏ callback-–∏ –≤ –µ–¥–Ω–∞ –≤–µ—Ä–∏–≥–∞.
*/

/*
–ó–∞–¥–∞—á–∞ 27: –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞ API –ø–æ–≤–∏–∫–≤–∞–Ω–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω–∏ –≤—Ä–µ–º–µ–Ω–∞ –Ω–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ

–ó–∞–¥–∞—á–∞: –°–∏–º—É–ª–∏—Ä–∞–π —Ç—Ä–∏ –∑–∞—è–≤–∫–∏ –∫—ä–º —Ä–∞–∑–ª–∏—á–Ω–∏ API, –∫–∞—Ç–æ –≤—Å—è–∫–∞ –≤—Ä—ä—â–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç —Å–ª–µ–¥ —Ä–∞–∑–ª–∏—á–Ω–æ –≤—Ä–µ–º–µ.

function fetchData(api, callback) {
    let time = Math.random() * 3000;
    setTimeout(() => {
        console.log(`üì° –ü–æ–ª—É—á–µ–Ω–∏ –¥–∞–Ω–Ω–∏ –æ—Ç ${api}`);
        callback({ api: api, data: "–î–∞–Ω–Ω–∏ –æ—Ç " + api });
    }, time);
}

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –Ω—è–∫–æ–ª–∫–æ –∑–∞—è–≤–∫–∏
fetchData("API 1", (data) => console.log(data));
fetchData("API 2", (data) => console.log(data));
fetchData("API 3", (data) => console.log(data));

–í—Å—è–∫–æ API –∏–º–∞ —Ä–∞–∑–ª–∏—á–Ω–æ –≤—Ä–µ–º–µ –∑–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ.
*/
